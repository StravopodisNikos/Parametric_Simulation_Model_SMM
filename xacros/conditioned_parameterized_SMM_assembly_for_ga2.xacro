<?xml version="1.0" ?>

<robot name="ovidius_smm" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!--Builds SMM structure using conditions. INPUT: Structure notation string. Code evaluates string elements and continues the robot assembly. Notation string is presented in notation_string.txt
    This file is based on conditioned_parameterized_SMM_assembly.xacro => BUT here assembly_parameters are given as in MATLAB ga file:
	matlab_ws/Kinematic_Model_Assembly_SMM/ga_objective_functions/subroutines_executed_in_objective_fn/structure_assembly_3dof.m -->
<!--ONLY SIMPLE CASES ARE USED HERE! -->	

<!-- START - Include -->

<!-- I.1.	INCLUDE XACROS THAT CONTAIN STRUCTURE BUILDING BLOCKS-->
<xacro:include filename="/home/nikos/PhD/projects/Parametric_Simulation_Model_SMM/xacros/ovidius_links_joints_names.xacro" />

<!-- I.2	INCLUDE YAML PROPERTIES FILE FOR EACH STRUCTURE BUILDING BLOCK AND DESIRED/OPTIMIZED ASSEMBLY PARAMETERS-->
<xacro:property name="definitions_file" value="/home/nikos/PhD/projects/Parametric_Simulation_Model_SMM/yamls/test/tf_list_for_conditioned_assembly.yaml" />

<!-- SYNTHETIC JOINTS: ONLY CT PARAMS ARE DEFINED HERE-VARIABLE PARAMETERS ARE DEFINED IN DIFFERENT yaml FILE! -->
<xacro:property name="synthetic1" value="${load_yaml(definitions_file)}"/>
<xacro:property name="synthetic1_name" value="${synthetic1['synthetic1_name']}" />
<xacro:property name="synthetic1_origin_xyz" value="${synthetic1['synthetic1_origin_xyz']}" />
<xacro:property name="synthetic1_origin_rpy" value="${synthetic1['synthetic1_origin_rpy']}" />

<xacro:property name="synthetic2" value="${load_yaml(definitions_file)}"/>
<xacro:property name="synthetic2_name" value="${synthetic2['synthetic2_name']}" />
<!-- xacro:property name="synthetic2_origin_x" value="${synthetic2['synthetic2_origin_x']}" / -->
<xacro:property name="synthetic2_origin_y" value="${synthetic2['synthetic2_origin_y']}" />
<!--xacro:property name="synthetic2_origin_z" value="${synthetic2['synthetic2_origin_z']}" / -->
<xacro:property name="synthetic2_origin_r" value="${synthetic2['synthetic2_origin_r']}" />
<!-- xacro:property name="synthetic2_origin_p" value="${synthetic2['synthetic2_origin_p']}" / -->
<xacro:property name="synthetic2_origin_ry" value="${synthetic2['synthetic2_origin_ry']}" />

<xacro:property name="synthetic3" value="${load_yaml(definitions_file)}"/>
<xacro:property name="synthetic3_name" value="${synthetic3['synthetic3_name']}" />
<!--xacro:property name="synthetic3_origin_x" value="${synthetic3['synthetic3_origin_x']}" / -->
<xacro:property name="synthetic3_origin_y" value="${synthetic3['synthetic3_origin_y']}" />
<!--xacro:property name="synthetic3_origin_z" value="${synthetic3['synthetic3_origin_z']}" / -->
<xacro:property name="synthetic3_origin_r" value="${synthetic3['synthetic3_origin_r']}" />
<!-- xacro:property name="synthetic3_origin_p" value="${synthetic3['synthetic3_origin_p']}" / -->
<xacro:property name="synthetic3_origin_ry" value="${synthetic3['synthetic3_origin_ry']}" />

<xacro:property name="synthetic4" value="${load_yaml(definitions_file)}"/>
<xacro:property name="synthetic4_name" value="${synthetic4['synthetic4_name']}" />
<!-- xacro:property name="synthetic4_origin_x" value="${synthetic4['synthetic4_origin_x']}" / -->
<xacro:property name="synthetic4_origin_y" value="${synthetic4['synthetic4_origin_y']}" />
<!--xacro:property name="synthetic4_origin_z" value="${synthetic4['synthetic4_origin_z']}" / -->
<xacro:property name="synthetic4_origin_r" value="${synthetic4['synthetic4_origin_r']}" />
<!-- xacro:property name="synthetic4_origin_p" value="${synthetic4['synthetic4_origin_p']}" /-->
<xacro:property name="synthetic4_origin_ry" value="${synthetic4['synthetic4_origin_ry']}" />

<xacro:property name="synthetic5" value="${load_yaml(definitions_file)}"/>
<xacro:property name="synthetic5_name" value="${synthetic5['synthetic5_name']}" />
<!--xacro:property name="synthetic5_origin_x" value="${synthetic5['synthetic5_origin_x']}" /-->
<xacro:property name="synthetic5_origin_y" value="${synthetic5['synthetic5_origin_y']}" />
<!--xacro:property name="synthetic5_origin_z" value="${synthetic5['synthetic5_origin_z']}" /-->
<xacro:property name="synthetic5_origin_r" value="${synthetic5['synthetic5_origin_r']}" />
<!--xacro:property name="synthetic5_origin_p" value="${synthetic5['synthetic5_origin_p']}" /-->
<xacro:property name="synthetic5_origin_ry" value="${synthetic5['synthetic5_origin_ry']}" />

<!-- PSEUDOJOINTS PARTS -->
<xacro:property name="pseudo_a" value="${load_yaml(definitions_file)}"/>
<xacro:property name="pseudo_a_name" value="${pseudo_a['pseudo_a_name']}" />
<xacro:property name="pseudo_a_origin_xyz" value="${pseudo_a['pseudo_a_origin_xyz']}" />
<xacro:property name="pseudo_a_origin_rpy" value="${pseudo_a['pseudo_a_origin_rpy']}" />

<xacro:property name="pseudo_b" value="${load_yaml(definitions_file)}"/>
<xacro:property name="pseudo_b_name" value="${pseudo_b['pseudo_b_name']}" />
<xacro:property name="pseudo_b_origin_xyz" value="${pseudo_b['pseudo_b_origin_xyz']}" />
<xacro:property name="pseudo_b_origin_rpy" value="${pseudo_b['pseudo_b_origin_rpy']}" />

<!-- PSEUDOJOINTS -->
<xacro:property name="pseudo" value="${load_yaml(definitions_file)}"/>
<xacro:property name="pseudo_name" value="${pseudo['pseudo_name']}" />
<xacro:property name="pseudo_origin_xyz" value="${pseudo['pseudo_origin_xyz']}" />
<xacro:property name="pseudo_origin_r" value="${pseudo['pseudo_origin_r']}" />
<xacro:property name="pseudo_origin_p" value="${pseudo['pseudo_origin_p']}" />
<xacro:property name="pseudo_origin_y" value="${pseudo['pseudo_origin_y']}" />

<!-- PSEUDOJOINTS' ANGLES: USER SPECIFIED!!! this values should be added to the Rx compartment of rotation values-->
<xacro:property name="pseudo_cnt" value="0" />
<xacro:property name="last_pseudo_cnt" value="0" />

<!--MATLAB pseudoangle calculation: deg2rad(15) * (floor(ci)-1) + (-1.5708)-->

<!-- Only for Reference anatomy -> Deprecated[8-4-21]
<xacro:property name="pseudo1_angle" value="0"/>
<xacro:property name="pseudo2_angle" value="0"/>
<xacro:property name="pseudo3_angle" value="0"/>
<xacro:property name="pseudo4_angle" value="0"/>
-->

<!-- These should be passed to a yaml file 
<xacro:property name="pseudo1_angle" value="0.2618"/>
<xacro:property name="pseudo2_angle" value="0.2618"/>
<xacro:property name="pseudo3_angle" value="-0.5236"/>
<xacro:property name="pseudo4_angle" value="0"/> -->
<!-- [8-4-21] Passed from a yaml file -->
<xacro:property name="pseudo_angles_definitions" value="/home/nikos/PhD/projects/Parametric_Simulation_Model_SMM/yamls/test/pseudo_angles_for_ovidius_robot_for_ga.yaml" />
<xacro:property name="pseudo_angles" value="${load_yaml(pseudo_angles_definitions)}"/>
<xacro:property name="pseudo1_angle" value="${pseudo_angles['pseudo1_angle']}" />
<xacro:property name="pseudo2_angle" value="${pseudo_angles['pseudo2_angle']}" />
<xacro:property name="pseudo3_angle" value="${pseudo_angles['pseudo3_angle']}" />
<xacro:property name="pseudo4_angle" value="${pseudo_angles['pseudo4_angle']}" />

<!-- ACTIVE2PSEUDOS FIXED TFs -->
<xacro:property name="active2pseudo" value="${load_yaml(definitions_file)}"/> 
<xacro:property name="active2pseudo_name" value="${active2pseudo['active2pseudo_name']}" />
<xacro:property name="active2pseudo_origin_xyz" value="${active2pseudo['active2pseudo_origin_xyz']}" />
<!--xacro:property name="active2pseudo_origin_rpy" value="${active2pseudo['active2pseudo_origin_rpy']}" /-->
<xacro:property name="active2pseudo_origin_r" value="${active2pseudo['active2pseudo_origin_r']}" />
<!--xacro:property name="active2pseudo_origin_p" value="${active2pseudo['active2pseudo__origin__p']}" /-->
<xacro:property name="active2pseudo_origin_ry" value="${active2pseudo['active2pseudo_origin_ry']}" />

<!-- ACTIVE MODULE PARTS -->
<xacro:property name="active_a" value="${load_yaml(definitions_file)}"/>
<xacro:property name="active_a_name" value="${active_a['active_a_name']}" />
<xacro:property name="active_a_origin_xyz" value="${active_a['active_a_origin_xyz']}" />
<xacro:property name="active_a_origin_rpy" value="${active_a['active_a_origin_rpy']}" />

<xacro:property name="active_b" value="${load_yaml(definitions_file)}"/>
<xacro:property name="active_b_name" value="${active_b['active_b_name']}" />
<xacro:property name="active_b_origin_xyz" value="${active_b['active_b_origin_xyz']}" />
<xacro:property name="active_b_origin_rpy" value="${active_b['active_b_origin_rpy']}" />

<!-- ACTIVE JOINTS -->
<xacro:property name="active" value="${load_yaml(definitions_file)}"/>
<xacro:property name="active_name" value="${active['active_name']}" />
<xacro:property name="active_origin_xyz" value="${active['active_origin_xyz']}" />
<xacro:property name="active_origin_rpy" value="${active['active_origin_rpy']}" />

<!-- II.1	STRUCTURE STRING DEFINITION. This is imported by user  in the yaml file, based on desired structure/optimization results-->
<xacro:property name="structure_string_definitions" value="/home/nikos/PhD/projects/Parametric_Simulation_Model_SMM/yamls/test/test_structure_string_definition_for_ga.yaml" />

<xacro:property name="string_elements" value="${load_yaml(structure_string_definitions)}"/>
<xacro:property name="s1" value="${string_elements['s1']}" />
<xacro:property name="s2" value="${string_elements['s2']}" />
<xacro:property name="s3" value="${string_elements['s3']}" />
<xacro:property name="s4" value="${string_elements['s4']}" />
<xacro:property name="s5" value="${string_elements['s5']}" />
<xacro:property name="s6" value="${string_elements['s6']}" />
<xacro:property name="s7" value="${string_elements['s7']}" />

<!-- II.2	STRUCTURE ASSEMBLY PARAMETERS DEFINITION. This is imported by user  in the yaml file, based on desired structure/optimization results-->
<xacro:property name="ovidius_assembly_parameters_file" value="/home/nikos/PhD/projects/Parametric_Simulation_Model_SMM/yamls/test/assembly_parameters_for_ovidius_robot_for_ga.yaml" />

<xacro:property name="assembly_parameters" value="${load_yaml(ovidius_assembly_parameters_file)}"/>
<xacro:property name="synthetic_origin_xzp_1_x" value="${assembly_parameters['synthetic_origin_xzp_1_x']}" />
<xacro:property name="synthetic_origin_xzp_1_z" value="${assembly_parameters['synthetic_origin_xzp_1_z']}" />
<xacro:property name="synthetic_origin_xzp_1_p" value="${assembly_parameters['synthetic_origin_xzp_1_p']}" />
<xacro:property name="synthetic_origin_xzp_2_x" value="${assembly_parameters['synthetic_origin_xzp_2_x']}" />
<xacro:property name="synthetic_origin_xzp_2_z" value="${assembly_parameters['synthetic_origin_xzp_2_z']}" />
<xacro:property name="synthetic_origin_xzp_2_p" value="${assembly_parameters['synthetic_origin_xzp_2_p']}" />
<xacro:property name="synthetic_origin_xzp_3_x" value="${assembly_parameters['synthetic_origin_xzp_3_x']}" />
<xacro:property name="synthetic_origin_xzp_3_z" value="${assembly_parameters['synthetic_origin_xzp_3_z']}" />
<xacro:property name="synthetic_origin_xzp_3_p" value="${assembly_parameters['synthetic_origin_xzp_3_p']}" />
<xacro:property name="active2pseudo_origin_p_4_1" value="${assembly_parameters['active2pseudo_origin_p_4_1']}" />
<xacro:property name="active2pseudo_origin_p_4_2" value="${assembly_parameters['active2pseudo_origin_p_4_2']}" />
<xacro:property name="active2pseudo_origin_p_4_3" value="${assembly_parameters['active2pseudo_origin_p_4_3']}" />

<!-- III.1	ROBOT to be generated to URDF model-->
<!-- ROBOT DESCRIPTION-->
<link name="world"/>

<!-- S -0- This is first revolute joint -->

<joint name="world__base_link" type="revolute">
<origin rpy="0 0 0" xyz="0 0 0"/>
<parent link="world"/>
<child link="base_link"/>
<axis xyz="0 0 1"/>
<limit effort="55" lower="-2" upper="2" velocity="4.0841"/>
<dynamics damping="0.5"/>
</joint>

<!-- METAMORPHIC LINK 1: BODY "base_link" AND the first pseudo are ALWAYS fixed-->
<link name="base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.00205 0.00373 0.015774"/>
      <mass value ="0.500" />
      <inertia ixx="5.063e-004" ixy="2.773e-005" ixz="7.042e-007" iyy="5.387e-004" iyz="1.237e-006" izz="7.207e-004"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0.5" xyz="0 0 0"/>
      <geometry>
        <mesh filename="/home/nikos/PhD/projects/Parametric_Simulation_Model_SMM/baselink/ovidius_smm_baselink.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="gray">
        <color rgba="0.5 0.5 0.5 0.9"/>
      </material>
    </visual>
</link>

<!-- STARTED FIRST METAMORPHIC LINK -->
<xacro:property name="meta_cnt" value="1" />
<xacro:property name="current_metalink" value="metalink_${meta_cnt}" />

<xacro:property name="pseudo1_index" value="1" />
<xacro:property name="pseudo2_index" value="2" />

<xacro:unless value="${ s2 == 9}"> <!--  Case A is this meta link had pseudo in first string parameter => ONLY CASE BECAUSE IN GA THE FIRST PSEUDO MUST ALWAYS EXIST!-->
        
    <xacro:property name="metalink_pseudo1" value="${current_metalink}_pseudo1" />

    <xacro:if value="${ s2 == 21 }"> <!-- ONLY THIS BECAUSE FROM BASE LINK TO PSEUDO1 ONLY SYNTHETIC 1 IS ACCEPTED- s2 == 31 always false! -->

      <xacro:synthetic_joint_name  synthetic_name="base_link__${metalink_pseudo1}_a"  synthetic_origin_rpy="${synthetic1_origin_rpy}" synthetic_origin_xyz="${synthetic1_origin_xyz}" synthetic_parent="base_link" synthetic_child="${metalink_pseudo1}_a" />

      <!-- Start building Pseudojoint 2 STATIC PART-->
      <xacro:pseudo_static_link_mesh name="${metalink_pseudo1}_a" origin_xyz="${pseudo_a_origin_xyz}" origin_rpy="${pseudo_a_origin_rpy}"/>

      <!-- PSEUDO2 CONFIGURATION -->
      <xacro:pseudo_joint_name  pseudo_name="${metalink_pseudo1}_a__${metalink_pseudo1}_b"  pseudo_origin_rpy="${pseudo_origin_r+pseudo1_angle} ${pseudo_origin_p} ${pseudo_origin_y}" pseudo_origin_xyz="${pseudo_origin_xyz}" pseudo_parent="${metalink_pseudo1}_a" pseudo_child="${metalink_pseudo1}_b" />

      <!-- Start building Pseudojoint 2 MOVING PART-->
      <xacro:pseudo_moving_link_mesh name="${metalink_pseudo1}_b" origin_xyz="${pseudo_b_origin_xyz}" origin_rpy="${pseudo_b_origin_rpy}"/> 

    </xacro:if>

    <xacro:unless value="${ s3 == 9}"> <!-- Case A.1.c : and a 2nd pseudo exists-->

      <xacro:property name="metalink_pseudo2" value="${current_metalink}_pseudo2" />
      
      <xacro:if value="${ s3 == 21}"> <!-- Case A.1.c.1 -->

        <xacro:synthetic_joint_name  synthetic_name="${metalink_pseudo1}_b__${metalink_pseudo2}_a"  synthetic_origin_rpy="${synthetic4_origin_r} ${synthetic_origin_xzp_1_p} ${synthetic4_origin_ry}" synthetic_origin_xyz="${synthetic_origin_xzp_1_x} ${synthetic4_origin_y} ${synthetic_origin_xzp_1_z}" synthetic_parent="${metalink_pseudo1}_b" synthetic_child="${metalink_pseudo2}_a" /> 

        <!-- Start building Pseudojoint 2 STATIC PART-->
        <xacro:pseudo_static_link_mesh name="${metalink_pseudo2}_a" origin_xyz="${pseudo_a_origin_xyz}" origin_rpy="${pseudo_a_origin_rpy}"/>

        <!-- PSEUDO2 CONFIGURATION -->
        <xacro:pseudo_joint_name  pseudo_name="${metalink_pseudo2}_a__${metalink_pseudo2}_b"  pseudo_origin_rpy="${pseudo_origin_r+pseudo2_angle} ${pseudo_origin_p} ${pseudo_origin_y}" pseudo_origin_xyz="${pseudo_origin_xyz}" pseudo_parent="${metalink_pseudo2}_a" pseudo_child="${metalink_pseudo2}_b" />

        <!-- Start building Pseudojoint 2 MOVING PART-->
        <xacro:pseudo_moving_link_mesh name="${metalink_pseudo2}_b" origin_xyz="${pseudo_b_origin_xyz}" origin_rpy="${pseudo_b_origin_rpy}"/> 

        <xacro:property name="last_body_assembled" value="${metalink_pseudo2}_b" />

      </xacro:if>

      <xacro:if value="${ s3 == 31}"> <!-- Case A.1.c.2 -->

        <xacro:synthetic_joint_name  synthetic_name="${metalink_pseudo1}_b__${metalink_pseudo2}_a"  synthetic_origin_rpy="${synthetic2_origin_r} ${synthetic_origin_xzp_1_p} ${synthetic2_origin_ry}" synthetic_origin_xyz="${synthetic_origin_xzp_1_x} ${synthetic2_origin_y} ${synthetic_origin_xzp_1_z}" synthetic_parent="${metalink_pseudo1}_b" synthetic_child="${metalink_pseudo2}_a" /> 

        <!-- Start building Pseudojoint 2 STATIC PART-->
        <xacro:pseudo_static_link_mesh name="${metalink_pseudo2}_a" origin_xyz="${pseudo_a_origin_xyz}" origin_rpy="${pseudo_a_origin_rpy}"/>

        <!-- PSEUDO2 CONFIGURATION -->
        <xacro:pseudo_joint_name  pseudo_name="${metalink_pseudo2}_a__${metalink_pseudo2}_b"  pseudo_origin_rpy="${pseudo_origin_r+pseudo2_angle} ${pseudo_origin_p} ${pseudo_origin_y}" pseudo_origin_xyz="${pseudo_origin_xyz}" pseudo_parent="${metalink_pseudo2}_a" pseudo_child="${metalink_pseudo2}_b" />

        <!-- Start building Pseudojoint 2 MOVING PART-->
        <xacro:pseudo_moving_link_mesh name="${metalink_pseudo2}_b" origin_xyz="${pseudo_b_origin_xyz}" origin_rpy="${pseudo_b_origin_rpy}"/>

        <xacro:property name="last_body_assembled" value="${metalink_pseudo2}_b" />

      </xacro:if>

    </xacro:unless>

    <xacro:if value="${ s3 == 9}"> <!-- Case A.1.d : if a 2nd pseudo doesn't exist-->

      <xacro:property name="last_body_assembled" value="${metalink_pseudo1}_b" />

    </xacro:if>
    
  </xacro:unless> <!--  Case A - end--> 
<!-- FINISHED FIRST METAMORPHIC LINK -->

<!-- ADD SECOND ROBOT JOINT->FIRST DYNAMIXEL JOINT -->
<!-- This fixed tf assembles active module of link to preceding pseudo-->
<xacro:if value="${s4 == 0}">

  <xacro:property name="active_cnt" value="1" />

  <!-- MATLAB: Add active DXL: active_assembly_index = 3-->
  <xacro:assembly_active_module2pseudo  active_assembly_name="${last_body_assembled}__${active_a_name}_${active_cnt}"  active_assembly_origin_rpy="${active2pseudo_origin_r} ${active2pseudo_origin_p_4_2} ${active2pseudo_origin_ry}" active_assembly_origin_xyz="${active2pseudo_origin_xyz}" active_assembly_parent="${last_body_assembled}" active_assembly_child="${active_a_name}_${active_cnt}" />

  <!-- Adds Active Module STATIC PART-->
  <xacro:active_static_link_mesh name="${active_a_name}_${active_cnt}" origin_xyz="${active_a_origin_xyz}" origin_rpy="${active_a_origin_rpy}"/>

  <!-- Adds DXL Active joint -->
  <xacro:dxlPROp_joint active_name="${active_a_name}_${active_cnt}__${active_b_name}_${active_cnt}"  active_origin_rpy="${active_origin_rpy}" active_origin_xyz="${active_origin_xyz}" active_parent="${active_a_name}_${active_cnt}" active_child="${active_b_name}_${active_cnt}"/>

  <!-- Adds Active Module MOVING PART-->
  <xacro:active_moving_link_mesh name="${active_b_name}_${active_cnt}" origin_xyz="${active_b_origin_xyz}" origin_rpy="${active_b_origin_rpy}"/>

</xacro:if>	

<!-- STARTED SECOND METAMORPHIC LINK -->
<xacro:property name="meta_cnt" value="2" />
<xacro:property name="current_metalink" value="metalink_${meta_cnt}" />

<xacro:property name="pseudo1_index" value="3" /> <!-- This is only used to define the default pseudo index: this is the pseudoangle index given in pseudo_origin_rpy for each pseudo -->
<xacro:property name="pseudo2_index" value="4" />

<xacro:unless value="${ s5 == 9}"> <!--  Case A is this meta link had pseudo in first string parameter => ONLY CASE BECAUSE IN GA THE FIRST PSEUDO MUST ALWAYS EXIST!-->
        
    <xacro:property name="metalink_pseudo1" value="${current_metalink}_pseudo1" />

    <xacro:if value="${ s5 == 31 }"> <!-- Case A.1.a -->

      <xacro:synthetic_joint_name  synthetic_name="${active_b_name}_${active_cnt}__${metalink_pseudo1}_a"  synthetic_origin_rpy="${synthetic3_origin_r} ${synthetic_origin_xzp_2_p} ${synthetic3_origin_ry}" synthetic_origin_xyz="${synthetic_origin_xzp_2_x} ${synthetic3_origin_y} ${synthetic_origin_xzp_2_z}" synthetic_parent="${active_b_name}_${active_cnt}" synthetic_child="${metalink_pseudo1}_a" /> 

      <!-- Start building Pseudojoint 2 STATIC PART-->
      <xacro:pseudo_static_link_mesh name="${metalink_pseudo1}_a" origin_xyz="${pseudo_a_origin_xyz}" origin_rpy="${pseudo_a_origin_rpy}"/>

      <!-- PSEUDO2 CONFIGURATION -->
      <xacro:pseudo_joint_name  pseudo_name="${metalink_pseudo1}_a__${metalink_pseudo1}_b"  pseudo_origin_rpy="${pseudo_origin_r+pseudo3_angle} ${pseudo_origin_p} ${pseudo_origin_y}" pseudo_origin_xyz="${pseudo_origin_xyz}" pseudo_parent="${metalink_pseudo1}_a" pseudo_child="${metalink_pseudo1}_b" />

      <!-- Start building Pseudojoint 2 MOVING PART-->
      <xacro:pseudo_moving_link_mesh name="${metalink_pseudo1}_b" origin_xyz="${pseudo_b_origin_xyz}" origin_rpy="${pseudo_b_origin_rpy}"/> 

    </xacro:if>
    
    <xacro:if value="${ s5 == 21}"> <!-- Case A.1.b -->

      <xacro:synthetic_joint_name  synthetic_name="${active_b_name}_${active_cnt}__${metalink_pseudo1}_a"  synthetic_origin_rpy="${synthetic5_origin_r} ${synthetic_origin_xzp_2_p} ${synthetic5_origin_ry}" synthetic_origin_xyz="${synthetic_origin_xzp_2_x} ${synthetic5_origin_y} ${synthetic_origin_xzp_2_z}" synthetic_parent="${active_b_name}_${active_cnt}" synthetic_child="${metalink_pseudo1}_a" /> 

      <!-- Start building Pseudojoint 2 STATIC PART-->
      <xacro:pseudo_static_link_mesh name="${metalink_pseudo1}_a" origin_xyz="${pseudo_a_origin_xyz}" origin_rpy="${pseudo_a_origin_rpy}"/>

      <!-- PSEUDO2 CONFIGURATION -->
      <xacro:pseudo_joint_name  pseudo_name="${metalink_pseudo1}_a__${metalink_pseudo1}_b"  pseudo_origin_rpy="${pseudo_origin_r+pseudo3_angle} ${pseudo_origin_p} ${pseudo_origin_y}" pseudo_origin_xyz="${pseudo_origin_xyz}" pseudo_parent="${metalink_pseudo1}_a" pseudo_child="${metalink_pseudo1}_b" />

      <!-- Start building Pseudojoint 2 MOVING PART-->
      <xacro:pseudo_moving_link_mesh name="${metalink_pseudo1}_b" origin_xyz="${pseudo_b_origin_xyz}" origin_rpy="${pseudo_b_origin_rpy}"/>

    </xacro:if>

    <xacro:unless value="${ s6 == 9}"> <!-- Case A.1.c : and a 2nd pseudo exists-->

      <xacro:property name="metalink_pseudo2" value="${current_metalink}_pseudo2" />
      
      <xacro:if value="${ s6 == 21}"> <!-- Case A.1.c.1 -->

        <xacro:synthetic_joint_name  synthetic_name="${metalink_pseudo1}_b__${metalink_pseudo2}_a"  synthetic_origin_rpy="${synthetic4_origin_r} ${synthetic_origin_xzp_3_p} ${synthetic4_origin_ry}" synthetic_origin_xyz="${synthetic_origin_xzp_3_x} ${synthetic4_origin_y} ${synthetic_origin_xzp_3_z}" synthetic_parent="${metalink_pseudo1}_b" synthetic_child="${metalink_pseudo2}_a" /> 

        <!-- Start building Pseudojoint 2 STATIC PART-->
        <xacro:pseudo_static_link_mesh name="${metalink_pseudo2}_a" origin_xyz="${pseudo_a_origin_xyz}" origin_rpy="${pseudo_a_origin_rpy}"/>

        <!-- PSEUDO2 CONFIGURATION -->
        <xacro:pseudo_joint_name  pseudo_name="${metalink_pseudo2}_a__${metalink_pseudo2}_b"  pseudo_origin_rpy="${pseudo_origin_r+pseudo4_angle} ${pseudo_origin_p} ${pseudo_origin_y}" pseudo_origin_xyz="${pseudo_origin_xyz}" pseudo_parent="${metalink_pseudo2}_a" pseudo_child="${metalink_pseudo2}_b" />

        <!-- Start building Pseudojoint 2 MOVING PART-->
        <xacro:pseudo_moving_link_mesh name="${metalink_pseudo2}_b" origin_xyz="${pseudo_b_origin_xyz}" origin_rpy="${pseudo_b_origin_rpy}"/> 

        <xacro:property name="last_body_assembled" value="${metalink_pseudo2}_b" />

      </xacro:if>

      <xacro:if value="${ s6 == 31}"> <!-- Case A.1.c.2 -->

        <xacro:synthetic_joint_name  synthetic_name="${metalink_pseudo1}_b__${metalink_pseudo2}_a"  synthetic_origin_rpy="${synthetic2_origin_r} ${synthetic_origin_xzp_3_p} ${synthetic2_origin_ry}" synthetic_origin_xyz="${synthetic_origin_xzp_3_x} ${synthetic2_origin_y} ${synthetic_origin_xzp_3_z}" synthetic_parent="${metalink_pseudo1}_b" synthetic_child="${metalink_pseudo2}_a" /> 

        <!-- Start building Pseudojoint 2 STATIC PART-->
        <xacro:pseudo_static_link_mesh name="${metalink_pseudo2}_a" origin_xyz="${pseudo_a_origin_xyz}" origin_rpy="${pseudo_a_origin_rpy}"/>

        <!-- PSEUDO2 CONFIGURATION -->
        <xacro:pseudo_joint_name  pseudo_name="${metalink_pseudo2}_a__${metalink_pseudo2}_b"  pseudo_origin_rpy="${pseudo_origin_r+pseudo4_angle} ${pseudo_origin_p} ${pseudo_origin_y}" pseudo_origin_xyz="${pseudo_origin_xyz}" pseudo_parent="${metalink_pseudo2}_a" pseudo_child="${metalink_pseudo2}_b" />

        <!-- Start building Pseudojoint 2 MOVING PART-->
        <xacro:pseudo_moving_link_mesh name="${metalink_pseudo2}_b" origin_xyz="${pseudo_b_origin_xyz}" origin_rpy="${pseudo_b_origin_rpy}"/>

        <xacro:property name="last_body_assembled" value="${metalink_pseudo2}_b" />

      </xacro:if>

    </xacro:unless>

    <xacro:if value="${ s6 == 9}"> <!-- Case A.1.d : if a 2nd pseudo doesn't exist-->

      <xacro:property name="last_body_assembled" value="${metalink_pseudo1}_b" />

    </xacro:if>
    
  </xacro:unless> <!--  Case A - end-->
<!-- FINISHED SECOND METAMORPHIC LINK --> 

<!-- ADD THIRD ROBOT JOINT->SECOND DYNAMIXEL JOINT -> START -->
<!-- This fixed tf assembles active module of link to preceding pseudo-->
<xacro:if value="${s7 == 0}">

	<xacro:property name="active_cnt" value="2" />

	<!-- MATLAB: Add active DXL: active_assembly_index = 3-->
	<xacro:assembly_active_module2pseudo  active_assembly_name="${last_body_assembled}__${active_a_name}_${active_cnt}"  active_assembly_origin_rpy="${active2pseudo_origin_r} ${active2pseudo_origin_p_4_3} ${active2pseudo_origin_ry}" active_assembly_origin_xyz="${active2pseudo_origin_xyz}" active_assembly_parent="${last_body_assembled}" active_assembly_child="${active_a_name}_${active_cnt}" />

	<!-- Adds Active Module STATIC PART-->
	<xacro:active_static_link_mesh name="${active_a_name}_${active_cnt}" origin_xyz="${active_a_origin_xyz}" origin_rpy="${active_a_origin_rpy}"/>

	<!-- Adds DXL Active joint -->
	<xacro:dxlPROp_joint active_name="${active_a_name}_${active_cnt}__${active_b_name}_${active_cnt}"  active_origin_rpy="${active_origin_rpy}" active_origin_xyz="${active_origin_xyz}" active_parent="${active_a_name}_${active_cnt}" active_child="${active_b_name}_${active_cnt}"/>

	<!-- Adds Active Module MOVING PART-->
	<xacro:active_moving_link_mesh name="${active_b_name}_${active_cnt}" origin_xyz="${active_b_origin_xyz}" origin_rpy="${active_b_origin_rpy}"/>

</xacro:if>	
<!-- ADD THIRD ROBOT JOINT->SECOND DYNAMIXEL JOINT -> END -->

</robot>